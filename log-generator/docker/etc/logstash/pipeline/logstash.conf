input {
  beats {
    port => 5044
  }
}

filter {
  grok {
    patterns_dir => "/usr/share/logstash/pipeline/patterns"
    match => {
      "message" => [
        "%{COMMON_LOG}%{WORD:type}\|%{NUMBER:status}\|%{USERNAME:user}\|%{IP:ip}",
        "%{COMMON_LOG}%{WORD:type}\|%{NUMBER:duration}\|%{DATA:action}\|%{WORD:status}\|%{USERNAME:user}",
        "(?m)%{COMMON_LOG}%{DATA:description}\|%{GREEDYDATA:stacktrace}"
      ]
    }
  }

  mutate {
    convert => {"duration" => float}
    rename => {
      "[log][file][path]" => "source"
      "@timestamp" => "processTime"
    }
    remove_field => ["message", "agent", "input", "ecs", "log"]
  }

  if ![type] {
    mutate {
      add_field => {"type" => "JAVA_ERROR"}
    }
  }

  if [type] == "LOGIN" {
    mutate {
      convert => {"status" => integer}
      add_field => {"login" => true}
    }

    if [status] > 300 {
      mutate {
        replace => {"login" => false}
      }
    }

    translate {
      field => "status"
      destination => "statusText"
      dictionary => {
        "200" => "Login correcto"
        "201" => "Login correcto tras varios intentos"
        "202" => "Login con actualizaci칩n de password"
        "204" => "Login autom치tico"
        "250" => "Login recordado"
        "100" => "Usuario suplantado"
        "150" => "Usuario suplantado autom치ticamente"
        "400" => "Usuario bloqueado"
        "404" => "Usuario no encontrado"
        "500" => "Contrase침a expirada"
      }
    }
  }

  date {
    match => ["date", "YYYY-MM-dd HH:mm:ss"]
    timezone => "America/Guayaquil"
  }

  mutate {
    remove_field => ["date"]
  }

}

output {
  stdout {}
}